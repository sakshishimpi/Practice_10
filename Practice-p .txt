Plugins : 
Deploy to container - ass 6
Build pipeline 
Maven integration
Pipeline maven integration
Pipeline utility step
Junit attachment
Docker pipeline
Cloudbees docker build and publish
Docker
docker-build-step






Docker commands:
To build : docker build -t [file name] . i.e docker buid -t hello-docker-java .
To check docker image is present or not : Docker images
Run the docker : docker run [file name] i.e docker run hello-docker-java
To add tag : docker tag hello-docker-java sakshishimpi/hello-docker-java
Where sakshishimpi : docker username
To login : docker login
To push : docker push sakshishimpi/hello-docker-java
To pull : docker pull sakshishimpi/hello-docker-java
In Pipeline → Select Pipeline Script → Add Script
My Script is :
pipeline {
agent any
tools{
maven 'Maven'
}
stages {
stage('Build') {
steps {
echo 'Hello World!!!'
checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs:
[[credentialsId: '7bb6ab7f-34b6-4a38-8400-c7b1cd190439', url:
'https://github.com/sakshishimpi/Assignment_8.git']])
}
}
}
post {
always{
junit(
allowEmptyResults: true,
testResults: '*/test-reports/.xml'
)
} }}




Jenkins file :
pipeline {
  environment {
    registry = "sakshishimpi/practicecode"
    registryCredential = 'dockerid'
    dockerImage = ''
  }
  agent any
  
  stages {
    stage('Build Image') {
      steps {
        script {
          dockerImage = docker.build("${registry}:${BUILD_NUMBER}")
        }
      }
    }
    stage('Deploy the image') {
      steps {
        script {
          docker.withRegistry('https://index.docker.io/v1/', registryCredential) {
            dockerImage.push()
          }
        }
}
}
}
}
Docker file 
# base image
FROM openjdk:8
COPY . /src/java
WORKDIR /src/java
RUN ["javac" , "HelloWorld.java"]
ENTRYPOINT ["java", "HelloWorld"]
